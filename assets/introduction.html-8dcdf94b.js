import{_ as i,r as o,o as r,c as l,a as n,b as s,d as a,w as c,g as d,e as t}from"./app-3c354f83.js";const u="/vuepress2-blog/images/introduction/navbar1.jpg",v="/vuepress2-blog/images/introduction/layout.png",k="/vuepress2-blog/images/introduction/layout-slot.png",m={},h=t(`<h1 id="vuepress" tabindex="-1"><a class="header-anchor" href="#vuepress" aria-hidden="true">#</a> vuepress</h1><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h2><p>VuePress 是一个以 Markdown 为中心的静态网站生成器。你可以使用 Markdown 来书写内容 (如文档、博客等) ，然后 VuePress 会帮助你生成一个静态网站来展示它们。</p><h2 id="工作原理" tabindex="-1"><a class="header-anchor" href="#工作原理" aria-hidden="true">#</a> 工作原理</h2><p>一个 VuePress 站点本质上是一个由 <code>Vue</code> 和 <code>Vue Router</code>驱动的单页面应用 (SPA)。</p><p>路由会根据你的 Markdown 文件的相对路径来自动生成。每个 Markdown 文件都通过 <code>markdown-it</code> 编译为 HTML ，然后将其作为 Vue 组件的模板。因此，你可以在 Markdown 文件中直接使用 Vue 语法，便于你嵌入一些动态内容。</p><ul><li><p>在开发过程中，我们启动一个常规的开发服务器 (dev-server) ，并将 VuePress 站点作为一个常规的 SPA。</p></li><li><p>在构建过程中，我们会为 VuePress 站点创建一个服务端渲染 (SSR) 的版本，然后通过虚拟访问每一条路径来渲染对应的 HTML。</p></li></ul><h2 id="页面" tabindex="-1"><a class="header-anchor" href="#页面" aria-hidden="true">#</a> 页面</h2><h3 id="路由" tabindex="-1"><a class="header-anchor" href="#路由" aria-hidden="true">#</a> 路由</h3><h3 id="frontmatter" tabindex="-1"><a class="header-anchor" href="#frontmatter" aria-hidden="true">#</a> Frontmatter</h3><p>Markdown 文件可以包含一个 YAML Frontmatter 。Frontmatter 必须在 Markdown 文件的顶部，并且被包裹在一对三短划线中间。下面是一个基本的示例:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>---
lang: zh-CN
title: 页面的标题
description: 页面的描述
---
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Frontmatter 优先级最高,Markdown 配置了 Frontmatter 将会覆盖<code>defineUserConfig</code>中的站点配置</p></div><h4 id="添加-frontmatter-配置项" tabindex="-1"><a class="header-anchor" href="#添加-frontmatter-配置项" aria-hidden="true">#</a> 添加 Frontmatter 配置项</h4><blockquote><p>使 Markdown 中的 toc 可配置,使用<code>extendsPageOptions</code></p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>import { defineUserConfig } from &quot;vuepress&quot;;
export default defineUserConfig({


	extendsPageOptions: (pageOptions, app) =&gt; {
		pageOptions.frontmatter = pageOptions.frontmatter ?? {};
		pageOptions.frontmatter.toc = false;
	},
});

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h2>`,17),b={href:"https://v2.vuepress.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"},g=t(`<h3 id="navbar" tabindex="-1"><a class="header-anchor" href="#navbar" aria-hidden="true">#</a> navbar</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token comment">//导航栏</span>
    <span class="token literal-property property">navbar</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;首页&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token string">&quot;/&quot;</span> <span class="token punctuation">,</span><span class="token literal-property property">activeMatch</span><span class="token operator">:</span><span class="token string">&#39;^/$&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;vuepress2&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token string">&quot;/vuepress2/&quot;</span><span class="token punctuation">,</span>
        <span class="token comment">// activeMatch 用于配置高亮规则</span>
        <span class="token literal-property property">activeMatch</span><span class="token operator">:</span> <span class="token string">&quot;^/vuepress2/&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;介绍&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token string">&quot;/vuepress2/introduction.md&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;部署&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token string">&quot;/vuepress2/deploy.md&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span><span class="token string">&quot;Markdown&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">link</span><span class="token operator">:</span><span class="token string">&quot;/markdown/&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;Github&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token string">&quot;https://github.com/yanhhhhhh/vuepress2-blog&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token punctuation">]</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+u+`" alt="navbar"></p><h3 id="siderbar" tabindex="-1"><a class="header-anchor" href="#siderbar" aria-hidden="true">#</a> siderbar</h3><h4 id="手动配置侧边栏元素" tabindex="-1"><a class="header-anchor" href="#手动配置侧边栏元素" aria-hidden="true">#</a> 手动配置侧边栏元素</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code> sidebar<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&#39;/vuepress2/&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          text<span class="token operator">:</span> <span class="token string">&#39;vuepress2&#39;</span><span class="token punctuation">,</span>
          <span class="token comment">//collapsible 字段来控制它是否可折叠</span>
          collapsible<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          children<span class="token operator">:</span> <span class="token punctuation">[</span>
           <span class="token string">&#39;/vuepress2/introduction.md&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;/vuepress2/file-structure.md&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;/vuepress2/deploy.md&#39;</span>
          <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;/markdown/&#39;</span><span class="token operator">:</span><span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          text<span class="token operator">:</span> <span class="token string">&#39;Markdown&#39;</span><span class="token punctuation">,</span>
          children<span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token string">&#39;/markdown/README.md&#39;</span><span class="token punctuation">,</span>
          <span class="token punctuation">]</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="设置根据页面标题自动生成的侧边栏的最大深度为-6" tabindex="-1"><a class="header-anchor" href="#设置根据页面标题自动生成的侧边栏的最大深度为-6" aria-hidden="true">#</a> 设置根据页面标题自动生成的侧边栏的最大深度为 6</h4><ol><li>sidebarDepth:6</li><li>markdown.headers.level:[2,3,4,5,6]</li></ol><h4 id="自动生成侧边栏" tabindex="-1"><a class="header-anchor" href="#自动生成侧边栏" aria-hidden="true">#</a> 自动生成侧边栏</h4><p>使用 <code>siderbar:auto</code></p><h2 id="markdown" tabindex="-1"><a class="header-anchor" href="#markdown" aria-hidden="true">#</a> Markdown</h2><p>页面的主要内容是使用 Markdown 书写的。VuePress 首先会将 Markdown 转换为 HTML ，然后将 HTML 作为 Vue 单文件组件的 <code>&lt;template&gt; </code>。</p><p>借助 markdown-it 和 Vue 模板语法的能力，基础的 Markdown 可以得到很多的扩展功能。</p><h3 id="markdown-中使用模板语法" tabindex="-1"><a class="header-anchor" href="#markdown-中使用模板语法" aria-hidden="true">#</a> Markdown 中使用模板语法</h3><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>i in 3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> span: {{ i }} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="markdown-中使用-vue-组件" tabindex="-1"><a class="header-anchor" href="#markdown-中使用-vue-组件" aria-hidden="true">#</a> Markdown 中使用 Vue 组件</h3>`,16),f=t(`<h4 id="注册组件-方式一" tabindex="-1"><a class="header-anchor" href="#注册组件-方式一" aria-hidden="true">#</a> 注册组件（方式一）</h4><p><code>enhance</code> 函数既可以是同步的，也可以是异步的。它接收一个 Context 参数，包含以下属性：</p><p>app 是由 <code>createApp</code> 创建的 Vue 应用实例。 router 是由 <code>createRouter</code> 创建的路由实例。 siteData 是一个根据用户配置生成的 Ref 对象，包含 <code>base, lang, title, description, head 和 locales</code>。 enhance 函数会在客户端应用创建后被调用，你可以对 Vue 应用添加各种能力。</p><p>通过 app.component 方法来注册 Vue 全局组件：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>import { defineClientConfig } from &#39;@vuepress/client&#39;
import MyComponent from &#39;./MyComponent.vue&#39;

export default defineClientConfig({
  enhance({ app }) {
    app.component(&#39;MyComponent&#39;, MyComponent)
  },
})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="注册组件-方式二" tabindex="-1"><a class="header-anchor" href="#注册组件-方式二" aria-hidden="true">#</a> 注册组件（方式二）</h4><ol><li><p>安装@vuepress/plugin-register-components</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pnpm install @vuepress/plugin-register-components@next
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>将 docs/.vuepress/global_components 下的 vue 文件自动注册为 Vue 组件</p></li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>import { registerComponentsPlugin } from &#39;@vuepress/plugin-register-components&#39;
import { getDirname, path } from &#39;@vuepress/utils&#39;

const __dirname = getDirname(i<wbr>mport.meta.url)
export const plugins =[

  registerComponentsPlugin({
		componentsDir: path.resolve(__dirname, &#39;../global_components&#39;),
	}),
]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="架构" tabindex="-1"><a class="header-anchor" href="#架构" aria-hidden="true">#</a> 架构</h2>`,9),y={href:"https://v2.vuepress.vuejs.org/zh/advanced/architecture.html",target:"_blank",rel:"noopener noreferrer"},x=n("h2",{id:"插件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#插件","aria-hidden":"true"},"#"),s(" 插件")],-1),_=n("h3",{id:"官方插件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#官方插件","aria-hidden":"true"},"#"),s(" 官方插件")],-1),w={href:"https://v2.vuepress.vuejs.org/zh/reference/plugin/back-to-top.html",target:"_blank",rel:"noopener noreferrer"},q=n("h3",{id:"社区插件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#社区插件","aria-hidden":"true"},"#"),s(" 社区插件")],-1),M={href:"https://github.com/vuepressjs/awesome-vuepress#plugins",target:"_blank",rel:"noopener noreferrer"},C=t('<h3 id="自定义插件" tabindex="-1"><a class="header-anchor" href="#自定义插件" aria-hidden="true">#</a> 自定义插件</h3><h4 id="插件-api" tabindex="-1"><a class="header-anchor" href="#插件-api" aria-hidden="true">#</a> 插件 api</h4><h2 id="主题" tabindex="-1"><a class="header-anchor" href="#主题" aria-hidden="true">#</a> 主题</h2><h3 id="默认主题" tabindex="-1"><a class="header-anchor" href="#默认主题" aria-hidden="true">#</a> 默认主题</h3><h3 id="继承主题" tabindex="-1"><a class="header-anchor" href="#继承主题" aria-hidden="true">#</a> 继承主题</h3><h4 id="布局插槽" tabindex="-1"><a class="header-anchor" href="#布局插槽" aria-hidden="true">#</a> 布局插槽</h4><p>默认主题的  <code>Layout</code>  布局提供了一些插槽：</p><ul><li><p><code>navbar</code></p></li><li><p><code>navbar-before</code></p></li><li><p><code>navbar-after</code></p></li><li><p><code>sidebar</code></p></li><li><p><code>sidebar-top</code></p></li><li><p><code>sidebar-bottom</code></p></li><li><p><code>page</code></p></li><li><p><code>page-top</code></p></li><li><p><code>page-bottom</code></p></li><li><p><code>page-content-top</code></p></li><li><p><code>page-content-bottom</code></p><p><img src="'+v+`" alt="layout"></p></li></ul><ol><li>首先，创建一个客户端配置文件  .vuepress/client.ts :</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vuepress/client&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Layout <span class="token keyword">from</span> <span class="token string">&quot;./layouts/Layout.vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">layouts</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    Layout<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>创建  .vuepress/layouts/Layout.vue ，并使用由默认主题的  Layout  布局提供的插槽：</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span>
<span class="token keyword">import</span> ParentLayout <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/theme-default/layouts/Layout.vue&#39;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>ParentLayout<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>template #page<span class="token operator">-</span>bottom<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;my-footer&quot;</span><span class="token operator">&gt;</span>This is my custom page footer<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>ParentLayout<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>style lang<span class="token operator">=</span><span class="token string">&quot;css&quot;</span><span class="token operator">&gt;</span>
<span class="token punctuation">.</span>my<span class="token operator">-</span>footer <span class="token punctuation">{</span>
  text<span class="token operator">-</span>align<span class="token operator">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+k+`" alt="layout-slot"></p><h4 id="组件替换" tabindex="-1"><a class="header-anchor" href="#组件替换" aria-hidden="true">#</a> 组件替换</h4><blockquote><p>替换默认主题提供的某个组件</p><p>默认主题将所有 <code>非全局的组件</code> 都注册了一个带 @theme 前缀的<code> alias</code> 。例如，Navbar.vue 的别名是 @theme/Navbar.vue</p></blockquote><p>想要替换 Navbar.vue 组件，只需要在配置文件 .vuepress/config.ts 中覆盖这个别名即可：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> getDirname<span class="token punctuation">,</span> path <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vuepress/utils&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defaultTheme<span class="token punctuation">,</span> defineUserConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vuepress&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> __dirname <span class="token operator">=</span> <span class="token function">getDirname</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineUserConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  theme<span class="token operator">:</span> <span class="token function">defaultTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  alias<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;@theme/HomeFooter.vue&quot;</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>
      __dirname<span class="token punctuation">,</span>
      <span class="token string">&quot;./components/MyHomeFooter.vue&quot;</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自定义主题" tabindex="-1"><a class="header-anchor" href="#自定义主题" aria-hidden="true">#</a> 自定义主题</h3><ol><li><p>创建主题的客户端配置文件 client.ts</p><blockquote><p>layouts 字段声明了你的主题提供的布局。一个主题必须提供至少两个布局：Layout 和 NotFound 。前者用于提供一般页面的默认布局，后者用于提供 404 页面的布局。</p></blockquote></li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vuepress/client&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Layout <span class="token keyword">from</span> <span class="token string">&quot;./layouts/Layout.vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> NotFound <span class="token keyword">from</span> <span class="token string">&quot;./layouts/NotFound.vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  layouts<span class="token operator">:</span> <span class="token punctuation">{</span>
    Layout<span class="token punctuation">,</span>
    NotFound<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Layout 布局应该包含 <code>Content</code> 组件来展示 Markdown 内容</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;template&gt;
  &lt;div&gt;
    &lt;Content /&gt;
  &lt;/div&gt;
&lt;/template&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>NotFound 布局会被用于 404.html 页面</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;template&gt;
  &lt;div&gt;404 Not Found&lt;/div&gt;
&lt;/template&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="vuepress-官方文档" tabindex="-1"><a class="header-anchor" href="#vuepress-官方文档" aria-hidden="true">#</a> VuePress 官方文档</h2>`,22),V={href:"https://v2.vuepress.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"},P=n("h2",{id:"vuepress-packages",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vuepress-packages","aria-hidden":"true"},"#"),s(" VuePress packages")],-1),L=n("blockquote",null,[n("p",null,"自定义主题或者插件会使用的依赖包 vuepress 默认主题@vuepress/theme-default")],-1),N=n("p",null,"vuepress 工具类 @vuepress/utils",-1),j=n("p",null,"Node API @vuepress/core,其中 提供插件 API",-1),F=n("p",null,"客户端 API @vuepress/clien",-1);function T(A,D){const e=o("ExternalLinkIcon"),p=o("RouterLink");return r(),l("div",null,[h,n("p",null,[n("a",b,[s("VuePress 配置"),a(e)])]),g,n("p",null,[a(p,{to:"/markdown/markdown-vue.html"},{default:c(()=>[s("exmple")]),_:1})]),f,n("p",null,[n("a",y,[s("架构"),a(e)])]),d(" [架构](./architecture.md) "),x,_,n("p",null,[n("a",w,[s("插件列表"),a(e)])]),q,n("p",null,[n("a",M,[s("Awesome VuePress"),a(e)])]),C,n("p",null,[n("a",V,[s("VuePress"),a(e)])]),P,L,N,j,F])}const R=i(m,[["render",T],["__file","introduction.html.vue"]]);export{R as default};
